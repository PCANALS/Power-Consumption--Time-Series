"%ni%" = Negate("%in%")
# data = read.transactions("C:/Users/David/Google Drive/Ubiqum/5_MBA/transactions.csv",
#                   format = "basket",
#                   sep = ",",
#                   rm.duplicates = T,
#                   encoding = "unknown")
#
# black = read.csv("C:/Users/David/Google Drive/Ubiqum/1_Blackwell/Regression Project/Data/existingProductAttributes.csv")
setwd("C:/Users/pilar/Documents/Ubiqum/TASK2.4/task-2-4-basket-analysis-PCANALS")
data = read.transactions("transactions.csv",
format = "basket",
sep = ",",
rm.duplicates = T,
encoding = "unknown")
black<- read.csv("existingProductAttributes.csv")
library(arules)
library(arulesViz)
library(dplyr)
library(ggplot2)
"%ni%" = Negate("%in%")
# data = read.transactions("C:/Users/David/Google Drive/Ubiqum/5_MBA/transactions.csv",
#                   format = "basket",
#                   sep = ",",
#                   rm.duplicates = T,
#                   encoding = "unknown")
#
# black = read.csv("C:/Users/David/Google Drive/Ubiqum/1_Blackwell/Regression Project/Data/existingProductAttributes.csv")
setwd("C:/Users/pilar/Documents/Ubiqum/TASK2.4/task-2-4-basket-analysis-PCANALS")
data = read.transactions("transactions.csv",
format = "basket",
sep = ",",
rm.duplicates = T,
encoding = "unknown")
black<- read.csv("existingProductAttributes.csv")
dataHigh <- data[size(data) <= 5 & size(data) > 0]
dataLow<-data[size(data)>5]
rm(list = ls())
library(arules)
library(arulesViz)
library(dplyr)
library(ggplot2)
"%ni%" = Negate("%in%")
# data = read.transactions("C:/Users/David/Google Drive/Ubiqum/5_MBA/transactions.csv",
#                   format = "basket",
#                   sep = ",",
#                   rm.duplicates = T,
#                   encoding = "unknown")
#
# black = read.csv("C:/Users/David/Google Drive/Ubiqum/1_Blackwell/Regression Project/Data/existingProductAttributes.csv")
setwd("C:/Users/pilar/Documents/Ubiqum/TASK2.4/task-2-4-basket-analysis-PCANALS")
data = read.transactions("transactions.csv",
format = "basket",
sep = ",",
rm.duplicates = T,
encoding = "unknown")
black<- read.csv("existingProductAttributes.csv")
dataHigh <- data[size(data) <= 5 & size(data) > 0]
dataLow<-data[size(data)>5]
###########################################################################################
######################## CREACION DE BRAND DENTRO DE ITEMINFO ########################
###########################################################################################
data@itemInfo$brand = data@itemInfo$labels
data@itemInfo$brand[grep(pattern = "^i[A-Z]", x = data@itemInfo$brand)] <- "Apple"
data@itemInfo$brand[grep(pattern = "^Apple", x = data@itemInfo$brand)] <- "Apple"
data@itemInfo$brand[grep(pattern = "^LG", x = data@itemInfo$brand)] <- "LG"
data@itemInfo$brand[grep(pattern = "^Acer", x = data@itemInfo$brand)] <- "Acer"
data@itemInfo$brand[grep(pattern = "^HP", x = data@itemInfo$brand)] <- "HP"
data@itemInfo$brand[grep(pattern = "^ASUS", x = data@itemInfo$brand)] <- "Asus"
data@itemInfo$brand[grep(pattern = "^Dell", x = data@itemInfo$brand)] <- "Dell"
data@itemInfo$brand[grep(pattern = "^Lenovo", x = data@itemInfo$brand)] <- "Lenovo"
data@itemInfo$brand[grep(pattern = "^CYBERPOWER", x = data@itemInfo$brand)] <- "Cyberpower"
data@itemInfo$brand[grep(pattern = "^Samsung", x = data@itemInfo$brand)] <- "Samsung"
data@itemInfo$brand[grep(pattern = "^Logit", x = data@itemInfo$brand)] <- "Logitech"
data@itemInfo$brand[grep(pattern = "^Microsoft", x = data@itemInfo$brand)] <- "Microsoft"
data@itemInfo$brand[grep(pattern = "^Rii", x = data@itemInfo$brand)] <- "Rii"
data@itemInfo$brand[grep(pattern = "^Alienware", x = data@itemInfo$brand)] <- "Alienware"
data@itemInfo$brand[data@itemInfo$brand %ni% c("Apple", "LG", "Acer", "HP", "Asus", "Dell", "Lenovo", "Cyberpower",
"Samsung", "Logitech", "Microsoft", "Rii", "Alienware")] <- "Others"
data@itemInfo$brand <- as.factor(data@itemInfo$brand)
###########################################################################################
########################### CREACION DE CATE DENTRO DE ITEMINFO ###########################
###########################################################################################
data@itemInfo$cate = data@itemInfo$labels
#Laptops# aÃ±adiendo las diferentes palabras clave
data@itemInfo$cate[grep(pattern = "Laptop|MacBook|Aspire|Chromebook", x = data@itemInfo$cate)] <- "Laptops"
#Desktop# # utilizando un vector por la palabra Desktop en diferentes categorias#
desks<-c("Lenovo Desktop Computer","HP Desktop","iMac","ASUS Desktop","Dell Desktop",
"Intel Desktop","Acer Desktop","CYBERPOWER Gamer Desktop","Dell 2 Desktop")
data@itemInfo$cate[grep(paste(pattern = desks, collapse="|"), x = data@itemInfo$cate)] <- "Desktops"
#Monitors# Todos los monitors finalizan en $
data@itemInfo$cate[grep(pattern = "Monitor$", x = data@itemInfo$cate)] <- "Monitors"
#Computer Mice# vector por la diversidad
mouse<- c("3-Button Mouse","Logitech Wireless Mouse","Microsoft Basic Optical Mouse",
"Logitech 3-button Mouse","Redragon Gaming Mouse","HP Wireless Mouse","Generic Black 3-Button",
"Wireless Portable Mouse","Gaming Mouse Professional","Slim Wireless Mouse")
data@itemInfo$cate[grep(paste(pattern = mouse, collapse="|"), x = data@itemInfo$cate)] <- "Computer Mice"
#Keyboard# acabado en Keyboard$
data@itemInfo$cate[grep(pattern = "Keyboard$", x = data@itemInfo$cate)] <- "Keyboard"
#Mouse and Keyboard Combo#
data@itemInfo$cate[grep(pattern = "Combo", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
data@itemInfo$cate[grep(pattern = "Keyboard and Mouse", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
data@itemInfo$cate[grep(pattern = "Keyboard & Mouse", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
#Computer Headphones# #mezcla de generico y especifico por no tener key words#
data@itemInfo$cate[grep(pattern = "Headset", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "On-Ear", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "Ailihen", x = data@itemInfo$cate)] <-"Computer Headphones"
data@itemInfo$cate[grep(pattern = "Koss", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "Kensington Headphones", x = data@itemInfo$cate)] <- "Computer Headphones"
#Active Headphones# #especifico por no existir key words#
data@itemInfo$cate[grep(pattern = "Earpods", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Bluetooth Headphone", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Beats", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "In-Ear", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Earhook", x = data@itemInfo$cate)] <- "Active Headphones"
#Computer Cords# #key word#
data@itemInfo$cate[grep(pattern = "Cable", x = data@itemInfo$cate)] <- "Computer Cords"
data@itemInfo$cate[grep(pattern = "HDMI", x = data@itemInfo$cate)] <- "Computer Cords"
#Accessories#
data@itemInfo$cate[grep(pattern = "Mouse Pad", x = data@itemInfo$cate)] <- "Accesories"
data@itemInfo$cate[grep(pattern = "Computer Game", x = data@itemInfo$cate)] <- "Accesories"
data@itemInfo$cate[grep(pattern = "Home and Student", x = data@itemInfo$cate)] <- "Accesories"
#Speakers# Mezcla key word y especifico#
data@itemInfo$cate[grep(pattern = "Speaker", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "Sonos", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "Acoustics", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "DOSS Touch Wireless Bluetooth", x = data@itemInfo$cate)] <- "Speakers"
#Printers # con vector para evitar confusion con Printer Ink#
printers<- c("Epson Printer","HP Wireless Printer","Canon Office Printer",
"Brother Printer","DYMO Label Manker")
data@itemInfo$cate[grep(paste(pattern = printers, collapse="|"), x = data@itemInfo$cate)] <- "Printers"
#Printer Ink# key words genericas#
data@itemInfo$cate[grep(pattern = "Ink", x = data@itemInfo$cate)] <- "Printer Ink"
data@itemInfo$cate[grep(pattern = "Toner", x = data@itemInfo$cate)] <- "Printer Ink"
data@itemInfo$cate[grep(pattern = "Tape", x = data@itemInfo$cate)] <- "Printer Ink"
#Computer Stands# key words genericas#
data@itemInfo$cate[grep(pattern = "Stand", x = data@itemInfo$cate)] <- "Computer Stands"
data@itemInfo$cate[grep(pattern = "Mount", x = data@itemInfo$cate)] <- "Computer Stands"
#Computer Tablets# especifico por key words dentro de otras palabras
data@itemInfo$cate[grep(pattern = "iPad", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Kindle", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Fire HD Tablet", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Samsung Galaxy Tab", x = data@itemInfo$cate)] <- "Computer Tablets"
#External Hardrives# mix
data@itemInfo$cate[grep(pattern = "External", x = data@itemInfo$cate)] <- "External Hardrives"
data@itemInfo$cate[grep(pattern = "5TB Desktop Hard Drive", x = data@itemInfo$cate)] <- "External Hardrives"
#Smart Home Devices# mix
data@itemInfo$cate[grep(pattern = "TV", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Google Home", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Smart Light Bulb", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Roku Express", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate <- as.factor(data@itemInfo$cate)
itemFrequencyPlot(data,
topN = 10, #Hay que indicarle un top o no puede plotear#
type = "absolute",
names = T,
ylab = "Volume",
main = "Top 10 Products Electronidex",
col = "light blue"
)
black <- within(black,
Product.Type <- factor(Product.Type,
levels=names(sort(table(Product.Type),
decreasing=TRUE))))
p <- ggplot(data=black, aes(x=Product.Type)) +
geom_bar(color = "black", fill="lightblue") +
ggtitle("Blackwell products by category") +
xlab("") +
ylab("Amoutn of products") +
theme_classic() +
theme(axis.text.x = element_text(angle=20))
p
data %>%
aggregate("cate") %>%
itemFrequencyPlot(topN = 17,
type = "absolute",
names = T,
ylab = "Volume",
xlab = "",
main = "Electronidex products by category",
col = "light blue"
)
##########################
### Generico Producto ###
##########################
rules.generic = apriori(data = data, parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
inspect(head(sort(rules.generic, by="confidence"),6))
hist(size(data),
main = "Frequency of transactions",
xlab = "Quantity of products by transaction",
ylab = "Amount",
col = "light blue"
)
products<-c(data@itemInfo$labels)
rhsproducts<-products[products %ni% c("iMac", "HP Laptop")]
rules.product <- apriori(data = data,
appearance = list(rhs=rhsproducts),
parameter = list(support = 0.01,
confidence = 0.1,
minlen=2)
)
inspect(head(sort(rules.product, by="confidence"),5))
###########################
### GENERICO PARA BRAND ###
###########################
brand.cat <- arules::aggregate(x = data, by = "brand")
rules.brand <- apriori(data = brand.cat,
parameter = list(support = 0.01, confidence = 0.5, minlen =2))
inspect(head(sort(rules.brand, by="confidence"),6))
###########################
### GENERICO PARA APPLE ###
###########################
brand.cat <- arules::aggregate(x = data, by = "brand")
rules.apple <- apriori(data = brand.cat,
appearance = list(lhs= "Apple"),
parameter = list(support = 0.01, confidence = 0.3, minlen =2))
inspect(head(sort(rules.apple, by="confidence"),15))
cate.cat <- arules::aggregate(x = data, by = "cate")
categorias <- levels(data@itemInfo$cate)
rules.cat<-apriori(data = cate.cat,
parameter = list(support = 0.01, confidence = 0.8, minlen =2))
inspect(head(sort(rules.cat, by="confidence"),6))
#agregate#
rhscate <- categorias[categorias %ni% c("Desktops", "Laptops")]
rules.rhs <- apriori(data = cate.cat, appearance = list(rhs=rhscate), parameter = list(support = 0.01, confidence = 0.1, minlen=2))
inspect(head(sort(rules.rhs, by="confidence"),6))
rm(list = ls())
library(arules)
library(arulesViz)
library(dplyr)
library(ggplot2)
"%ni%" = Negate("%in%")
#
# data = read.transactions("C:/Users/David/Google Drive/Ubiqum/5_MBA/transactions.csv",
#                   format = "basket",
#                   sep = ",",
#                   rm.duplicates = T,
#                   encoding = "unknown")
#
# black = read.csv("C:/Users/David/Google Drive/Ubiqum/1_Blackwell/Regression Project/Data/existingProductAttributes.csv")
setwd("C:/Users/pilar/Documents/Ubiqum/TASK2.4/task-2-4-basket-analysis-PCANALS")
data = read.transactions("transactions.csv",
format = "basket",
sep = ",",
rm.duplicates = T,
encoding = "unknown")
black<- read.csv("existingProductAttributes.csv")
dataHigh <- data[size(data) <= 5 & size(data) > 0]
dataLow<-data[size(data)>5]
###########################################################################################
######################## CREACION DE BRAND DENTRO DE ITEMINFO ########################
###########################################################################################
data@itemInfo$brand = data@itemInfo$labels
data@itemInfo$brand[grep(pattern = "^i[A-Z]", x = data@itemInfo$brand)] <- "Apple"
data@itemInfo$brand[grep(pattern = "^Apple", x = data@itemInfo$brand)] <- "Apple"
data@itemInfo$brand[grep(pattern = "^LG", x = data@itemInfo$brand)] <- "LG"
data@itemInfo$brand[grep(pattern = "^Acer", x = data@itemInfo$brand)] <- "Acer"
data@itemInfo$brand[grep(pattern = "^HP", x = data@itemInfo$brand)] <- "HP"
data@itemInfo$brand[grep(pattern = "^ASUS", x = data@itemInfo$brand)] <- "Asus"
data@itemInfo$brand[grep(pattern = "^Dell", x = data@itemInfo$brand)] <- "Dell"
data@itemInfo$brand[grep(pattern = "^Lenovo", x = data@itemInfo$brand)] <- "Lenovo"
data@itemInfo$brand[grep(pattern = "^CYBERPOWER", x = data@itemInfo$brand)] <- "Cyberpower"
data@itemInfo$brand[grep(pattern = "^Samsung", x = data@itemInfo$brand)] <- "Samsung"
data@itemInfo$brand[grep(pattern = "^Logit", x = data@itemInfo$brand)] <- "Logitech"
data@itemInfo$brand[grep(pattern = "^Microsoft", x = data@itemInfo$brand)] <- "Microsoft"
data@itemInfo$brand[grep(pattern = "^Rii", x = data@itemInfo$brand)] <- "Rii"
data@itemInfo$brand[grep(pattern = "^Alienware", x = data@itemInfo$brand)] <- "Alienware"
data@itemInfo$brand[data@itemInfo$brand %ni% c("Apple", "LG", "Acer", "HP", "Asus", "Dell", "Lenovo", "Cyberpower",
"Samsung", "Logitech", "Microsoft", "Rii", "Alienware")] <- "Others"
data@itemInfo$brand <- as.factor(data@itemInfo$brand)
###########################################################################################
########################### CREACION DE CATE DENTRO DE ITEMINFO ###########################
###########################################################################################
data@itemInfo$cate = data@itemInfo$labels
#Laptops# aÃ±adiendo las diferentes palabras clave
data@itemInfo$cate[grep(pattern = "Laptop|MacBook|Aspire|Chromebook", x = data@itemInfo$cate)] <- "Laptops"
#Desktop# # utilizando un vector por la palabra Desktop en diferentes categorias#
desks<-c("Lenovo Desktop Computer","HP Desktop","iMac","ASUS Desktop","Dell Desktop",
"Intel Desktop","Acer Desktop","CYBERPOWER Gamer Desktop","Dell 2 Desktop")
data@itemInfo$cate[grep(paste(pattern = desks, collapse="|"), x = data@itemInfo$cate)] <- "Desktops"
#Monitors# Todos los monitors finalizan en $
data@itemInfo$cate[grep(pattern = "Monitor$", x = data@itemInfo$cate)] <- "Monitors"
#Computer Mice# vector por la diversidad
mouse<- c("3-Button Mouse","Logitech Wireless Mouse","Microsoft Basic Optical Mouse",
"Logitech 3-button Mouse","Redragon Gaming Mouse","HP Wireless Mouse","Generic Black 3-Button",
"Wireless Portable Mouse","Gaming Mouse Professional","Slim Wireless Mouse")
data@itemInfo$cate[grep(paste(pattern = mouse, collapse="|"), x = data@itemInfo$cate)] <- "Computer Mice"
#Keyboard# acabado en Keyboard$
data@itemInfo$cate[grep(pattern = "Keyboard$", x = data@itemInfo$cate)] <- "Keyboard"
#Mouse and Keyboard Combo#
data@itemInfo$cate[grep(pattern = "Combo", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
data@itemInfo$cate[grep(pattern = "Keyboard and Mouse", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
data@itemInfo$cate[grep(pattern = "Keyboard & Mouse", x = data@itemInfo$cate)] <- "Mouse and Keyboard Combo"
#Computer Headphones# #mezcla de generico y especifico por no tener key words#
data@itemInfo$cate[grep(pattern = "Headset", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "On-Ear", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "Ailihen", x = data@itemInfo$cate)] <-"Computer Headphones"
data@itemInfo$cate[grep(pattern = "Koss", x = data@itemInfo$cate)] <- "Computer Headphones"
data@itemInfo$cate[grep(pattern = "Kensington Headphones", x = data@itemInfo$cate)] <- "Computer Headphones"
#Active Headphones# #especifico por no existir key words#
data@itemInfo$cate[grep(pattern = "Earpods", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Bluetooth Headphone", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Beats", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "In-Ear", x = data@itemInfo$cate)] <- "Active Headphones"
data@itemInfo$cate[grep(pattern = "Earhook", x = data@itemInfo$cate)] <- "Active Headphones"
#Computer Cords# #key word#
data@itemInfo$cate[grep(pattern = "Cable", x = data@itemInfo$cate)] <- "Computer Cords"
data@itemInfo$cate[grep(pattern = "HDMI", x = data@itemInfo$cate)] <- "Computer Cords"
#Accessories#
data@itemInfo$cate[grep(pattern = "Mouse Pad", x = data@itemInfo$cate)] <- "Accesories"
data@itemInfo$cate[grep(pattern = "Computer Game", x = data@itemInfo$cate)] <- "Accesories"
data@itemInfo$cate[grep(pattern = "Home and Student", x = data@itemInfo$cate)] <- "Accesories"
#Speakers# Mezcla key word y especifico#
data@itemInfo$cate[grep(pattern = "Speaker", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "Sonos", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "Acoustics", x = data@itemInfo$cate)] <- "Speakers"
data@itemInfo$cate[grep(pattern = "DOSS Touch Wireless Bluetooth", x = data@itemInfo$cate)] <- "Speakers"
#Printers # con vector para evitar confusion con Printer Ink#
printers<- c("Epson Printer","HP Wireless Printer","Canon Office Printer",
"Brother Printer","DYMO Label Manker")
data@itemInfo$cate[grep(paste(pattern = printers, collapse="|"), x = data@itemInfo$cate)] <- "Printers"
#Printer Ink# key words genericas#
data@itemInfo$cate[grep(pattern = "Ink", x = data@itemInfo$cate)] <- "Printer Ink"
data@itemInfo$cate[grep(pattern = "Toner", x = data@itemInfo$cate)] <- "Printer Ink"
data@itemInfo$cate[grep(pattern = "Tape", x = data@itemInfo$cate)] <- "Printer Ink"
#Computer Stands# key words genericas#
data@itemInfo$cate[grep(pattern = "Stand", x = data@itemInfo$cate)] <- "Computer Stands"
data@itemInfo$cate[grep(pattern = "Mount", x = data@itemInfo$cate)] <- "Computer Stands"
#Computer Tablets# especifico por key words dentro de otras palabras
data@itemInfo$cate[grep(pattern = "iPad", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Kindle", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Fire HD Tablet", x = data@itemInfo$cate)] <- "Computer Tablets"
data@itemInfo$cate[grep(pattern = "Samsung Galaxy Tab", x = data@itemInfo$cate)] <- "Computer Tablets"
#External Hardrives# mix
data@itemInfo$cate[grep(pattern = "External", x = data@itemInfo$cate)] <- "External Hardrives"
data@itemInfo$cate[grep(pattern = "5TB Desktop Hard Drive", x = data@itemInfo$cate)] <- "External Hardrives"
#Smart Home Devices# mix
data@itemInfo$cate[grep(pattern = "TV", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Google Home", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Smart Light Bulb", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate[grep(pattern = "Roku Express", x = data@itemInfo$cate)] <- "Smart Home Devices"
data@itemInfo$cate <- as.factor(data@itemInfo$cate)
itemFrequencyPlot(data,
topN = 10, #Hay que indicarle un top o no puede plotear#
type = "absolute",
names = T,
ylab = "Volume",
main = "Top 10 Products Electronidex",
col = "mediumturquoise"
)
black <- within(black,
Product.Type <- factor(Product.Type,
levels=names(sort(table(Product.Type),
decreasing=TRUE))))
p <- ggplot(data=black, aes(x=Product.Type)) +
geom_bar(color = "black", fill="lightblue") +
ggtitle("Blackwell products by category") +
xlab("") +
ylab("Amoutn of products") +
theme_classic() +
theme(axis.text.x = element_text(angle=20))
p
data %>%
aggregate("cate") %>%
itemFrequencyPlot(topN = 17,
type = "absolute",
names = T,
ylab = "Volume",
xlab = "",
main = "Electronidex products by Product Type",
col = "mediumturquoise"
)
##########################
### Generico Producto ###
##########################
rules.generic = apriori(data = data, parameter = list(support = 0.01, confidence = 0.5, minlen = 2))
inspect(head(sort(rules.generic, by="confidence"),6))
hist(size(data),
main = "Frequency of transactions",
xlab = "Quantity of products by transaction",
ylab = "Amount",
col = "light blue"
)
products<-c(data@itemInfo$labels)
rhsproducts<-products[products %ni% c("iMac", "HP Laptop")]
rules.product <- apriori(data = data,
appearance = list(rhs=rhsproducts),
parameter = list(support = 0.01,
confidence = 0.1,
minlen=2)
)
inspect(head(sort(rules.product, by="confidence"),5))
###########################
### GENERICO PARA BRAND ###
###########################
brand.cat <- arules::aggregate(x = data, by = "brand")
rules.brand <- apriori(data = brand.cat,
parameter = list(support = 0.01, confidence = 0.5, minlen =2))
inspect(head(sort(rules.brand, by="confidence"),6))
###########################
### GENERICO PARA APPLE ###
###########################
brand.cat <- arules::aggregate(x = data, by = "brand")
rules.apple <- apriori(data = brand.cat,
appearance = list(lhs= "Apple"),
parameter = list(support = 0.01, confidence = 0.3, minlen =2))
inspect(head(sort(rules.apple, by="confidence"),15))
cate.cat <- arules::aggregate(x = data, by = "cate")
categorias <- levels(data@itemInfo$cate)
rules.cat<-apriori(data = cate.cat,
parameter = list(support = 0.01, confidence = 0.8, minlen =2))
inspect(head(sort(rules.cat, by="confidence"),6))
#agregate#
rhscate <- categorias[categorias %ni% c("Desktops", "Laptops")]
rules.rhs <- apriori(data = cate.cat, appearance = list(rhs=rhscate), parameter = list(support = 0.01, confidence = 0.1, minlen=2))
inspect(head(sort(rules.rhs, by="confidence"),6))
source('C:/Users/pilar/Google Drive/A_DATA/UBIQUM/TASK3.1/task-3-1-define-a-data-science-process-PCANALS/POWER.R', echo=TRUE)
install.packages("rlang")
library("rlang", lib.loc="~/R/win-library/3.5")
power_new[is.na(power_new)] <- 0
source('C:/Users/pilar/Google Drive/A_DATA/UBIQUM/TASK3.1/task-3-1-define-a-data-science-process-PCANALS/POWER.R', echo=TRUE)
source('C:/Users/pilar/Google Drive/A_DATA/UBIQUM/TASK3.1/task-3-1-define-a-data-science-process-PCANALS/POWER.R', echo=TRUE)
install.packages("Rcpp")
library("Rcpp", lib.loc="~/R/win-library/3.5")
source('C:/Users/pilar/Google Drive/A_DATA/UBIQUM/TASK3.1/task-3-1-define-a-data-science-process-PCANALS/POWER.R', echo=TRUE)
install.packages("tseries")
library(tidyselect)
library(lubridate)
rm(list = ls())
Sys.setlocale(category = "LC_ALL", locale = "english")
library(lubridate)
#####includes:
#library(dplyr)
#library(ggplot2)
#library(tidyr)
tidyverse_update()
#install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
rm(list = ls())
Sys.setlocale(category = "LC_ALL", locale = "english")
#### ._LIBRARIES####
library(tidyselect)
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(imputeTS)
library(R.utils)
library(TTR)
library(ggfortify)
library(magrittr)
library(forecast)
library(gridExtra)
library(GGally)
library(imputeTS)
library(stats)
library(tseries)
library(zoo)
install.packages("arules")
length(power_test_d)
power_test_d<
power_test_d
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("dplyr")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("tidyr")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("lubridate")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("imputeTS")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("xts")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("ttr")
install.packages("TTR")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("ggfortify")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("GGALLY")
install.packages("GGally")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("fansi")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
install.packages("utf8")
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
autoplot(power_test_m_ts) + autolayer(power_m_HW_for, PI=FALSE)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
source('C:/Users/pilar/Desktop/POWER.R', encoding = 'UTF-8', echo=TRUE)
autoplot(power_test_m_ts)
autoplot(power_test_m_ts) + autolayer(power_m_HW_for, PI=FALSE)
pl_na_dff
PlConsuption2
PlConsuption
pl_na_dff<-grid.arrange(PlConsuption, PlConsuption2)
power_w_ts<-ts(power_df_w$Global_active_power_kWm, frequency = 52, start=c(2006,12))
power_train_w<-power_df_w%>%ungroup()%>%filter(Year2!=2010)
###test #
power_test_w<-power_df_w%>%ungroup()%>%filter(Year2==2010)
52
power_train_m_dec<-decompose(power_train_m_ts)
power_train_w_dec<-decompose(power_train_w_ts)
power_train_d_dec<-decompose(power_train_d_ts)
power_train_m_HW<-HoltWinters(power_train_m_ts)
power_m_HW<-HoltWinters(power_m_ts)
power_train_w_HW<-HoltWinters(power_train_w_ts)
power_w_HW<-HoltWinters(power_w_ts)
power_train_d_HW<-HoltWinters(power_train_d_ts)
power_d_HW<-HoltWinters(power_d_ts)
